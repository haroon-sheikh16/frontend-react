[{"F:\\New folder\\frontend-react\\src\\index.js":"1","F:\\New folder\\frontend-react\\src\\App.js":"2","F:\\New folder\\frontend-react\\src\\reportWebVitals.js":"3","F:\\New folder\\frontend-react\\src\\components\\createTask.js":"4","F:\\New folder\\frontend-react\\src\\components\\task.js":"5"},{"size":606,"mtime":1611724130281,"results":"6","hashOfConfig":"7"},{"size":1590,"mtime":1611728889249,"results":"8","hashOfConfig":"7"},{"size":375,"mtime":1611724130284,"results":"9","hashOfConfig":"7"},{"size":1309,"mtime":1611724130279,"results":"10","hashOfConfig":"7"},{"size":475,"mtime":1611727716679,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11xs6gx",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"21"},"F:\\New folder\\frontend-react\\src\\index.js",[],"F:\\New folder\\frontend-react\\src\\App.js",[],"F:\\New folder\\frontend-react\\src\\reportWebVitals.js",[],"F:\\New folder\\frontend-react\\src\\components\\createTask.js",["25"],"import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nlet handleSubmit = (event) => {\r\n  if (event.target.task.value !== \"\") {\r\n    event.preventDefault();\r\n    let value1 = localStorage.getItem(\"task\");\r\n    if (value1) {\r\n      let value2 = JSON.parse(value1);\r\n      value2.push({ id: value2.length + 1, name: event.target.task.value });\r\n      localStorage.setItem(\"task\", JSON.stringify(value2));\r\n    } else {\r\n      let value2 = [];\r\n      value2.push({ id: value2.length + 1, name: event.target.task.value });\r\n      localStorage.setItem(\"task\", JSON.stringify(value2));\r\n    }\r\n    document.getElementById(\"t\").value = \"\";\r\n  }\r\n};\r\n\r\nfunction CreateTask() {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h3 className=\"text-center my-4 \">Create Task</h3>\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <h4>\r\n            <label>Enter Your Task</label>\r\n          </h4>\r\n          <input\r\n            id=\"t\"\r\n            name=\"task\"\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            placeholder=\"Enter Task\"\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Done\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateTask;\r\n",["26","27"],"F:\\New folder\\frontend-react\\src\\components\\task.js",["28"],"import React from \"react\";\r\n\r\nfunction Task(props) {\r\n  return (\r\n    <div>\r\n      <div className=\"card w-75\">\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">Task</h5>\r\n          <p className=\"card-text\">name : {props.name}</p>\r\n          <p className=\"card-text\">id: {props.id}</p>\r\n          <a href=\"#\" className=\"btn btn-primary\">\r\n            Button\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Task;\r\n",{"ruleId":"29","severity":1,"message":"30","line":2,"column":10,"nodeType":"31","messageId":"32","endLine":2,"endColumn":18},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":11,"column":11,"nodeType":"39","endLine":11,"endColumn":51},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["40"],"no-negated-in-lhs",["41"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]